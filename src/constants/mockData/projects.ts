import {Project, TestCaseType, TestStatus} from '@/types/common.types'

export const mockProjects: Project[] = [
	{
		id: '1',
		name: 'E-commerce Website',
		description: 'Automated testing for our e-commerce platform',
		createdAt: '2023-02-15T00:00:00Z',
		updatedAt: '2023-05-10T00:00:00Z',
		ownerId: '1', // Admin user
		teamMembers: ['1', '2', '3', '5'],
		testSuites: [
			{
				id: '101',
				name: 'User Authentication',
				description:
					'Test cases for user login, registration, and password recovery',
				createdAt: '2023-02-16T00:00:00Z',
				updatedAt: '2023-05-09T00:00:00Z',
				projectId: '1',
				testCases: [
					{
						id: '1001',
						name: 'Valid User Login',
						description: 'Test login with valid credentials',
						requirement: 'User must be able to log in with valid credentials',
						target:
							'User should be redirected to dashboard after successful login',
						type: TestCaseType.POSITIVE,
						status: TestStatus.PASSED,
						createdAt: '2023-02-17T00:00:00Z',
						updatedAt: '2023-05-08T00:00:00Z',
						testSuiteId: '101',
						steps: [
							{
								id: '10001',
								order: 1,
								action: 'navigate',
								selector: 'https://example.com/login',
								testCaseId: '1001',
							},
							{
								id: '10002',
								order: 2,
								action: 'fill',
								selector: '#email',
								value: 'test@example.com',
								testCaseId: '1001',
							},
							{
								id: '10003',
								order: 3,
								action: 'fill',
								selector: '#password',
								value: 'Password123',
								testCaseId: '1001',
							},
							{
								id: '10004',
								order: 4,
								action: 'click',
								selector: 'button[type="submit"]',
								testCaseId: '1001',
							},
							{
								id: '10005',
								order: 5,
								action: 'assert',
								selector: '.dashboard-welcome',
								expectedOutcome: 'Welcome back',
								testCaseId: '1001',
							},
						],
					},
					{
						id: '1002',
						name: 'Invalid User Login',
						description: 'Test login with invalid credentials',
						requirement:
							'System must reject login attempts with invalid credentials',
						target: 'System should display an error message for invalid login',
						type: TestCaseType.NEGATIVE,
						status: TestStatus.PASSED,
						createdAt: '2023-02-17T00:00:00Z',
						updatedAt: '2023-05-08T00:00:00Z',
						testSuiteId: '101',
						steps: [
							{
								id: '10006',
								order: 1,
								action: 'navigate',
								selector: 'https://example.com/login',
								testCaseId: '1002',
							},
							{
								id: '10007',
								order: 2,
								action: 'fill',
								selector: '#email',
								value: 'wrong@example.com',
								testCaseId: '1002',
							},
							{
								id: '10008',
								order: 3,
								action: 'fill',
								selector: '#password',
								value: 'WrongPassword',
								testCaseId: '1002',
							},
							{
								id: '10009',
								order: 4,
								action: 'click',
								selector: 'button[type="submit"]',
								testCaseId: '1002',
							},
							{
								id: '10010',
								order: 5,
								action: 'assert',
								selector: '.error-message',
								expectedOutcome: 'Invalid email or password',
								testCaseId: '1002',
							},
						],
					},
				],
			},
			{
				id: '102',
				name: 'Shopping Cart',
				description: 'Test cases for shopping cart functionality',
				createdAt: '2023-03-01T00:00:00Z',
				updatedAt: '2023-05-10T00:00:00Z',
				projectId: '1',
				testCases: [
					{
						id: '1003',
						name: 'Add Product to Cart',
						description: 'Test adding a product to the shopping cart',
						requirement:
							'Users must be able to add products to their shopping cart',
						target:
							'Product should be added to cart and cart count should be updated',
						type: TestCaseType.POSITIVE,
						status: TestStatus.PASSED,
						createdAt: '2023-03-02T00:00:00Z',
						updatedAt: '2023-05-10T00:00:00Z',
						testSuiteId: '102',
						steps: [
							{
								id: '10011',
								order: 1,
								action: 'navigate',
								selector: 'https://example.com/products',
								testCaseId: '1003',
							},
							{
								id: '10012',
								order: 2,
								action: 'click',
								selector: '.product-card:first-child .add-to-cart',
								testCaseId: '1003',
							},
							{
								id: '10013',
								order: 3,
								action: 'assert',
								selector: '.cart-count',
								expectedOutcome: '1',
								testCaseId: '1003',
							},
							{
								id: '10014',
								order: 4,
								action: 'click',
								selector: '.cart-icon',
								testCaseId: '1003',
							},
							{
								id: '10015',
								order: 5,
								action: 'assert',
								selector: '.cart-items .cart-item',
								expectedOutcome: 'Product name',
								testCaseId: '1003',
							},
						],
					},
				],
			},
		],
	},
	{
		id: '2',
		name: 'Banking App',
		description: 'Automated testing for mobile banking application',
		createdAt: '2023-03-20T00:00:00Z',
		updatedAt: '2023-05-12T00:00:00Z',
		ownerId: '3', // Jane Smith
		teamMembers: ['1', '3', '4'],
		testSuites: [
			{
				id: '201',
				name: 'Account Management',
				description: 'Test cases for account creation and management',
				createdAt: '2023-03-21T00:00:00Z',
				updatedAt: '2023-05-11T00:00:00Z',
				projectId: '2',
				testCases: [
					{
						id: '2001',
						name: 'View Account Balance',
						description: 'Test viewing account balance after login',
						requirement:
							'Users must be able to view their account balance after login',
						target: 'Account balance should be displayed on the accounts page',
						type: TestCaseType.POSITIVE,
						status: TestStatus.RUNNING,
						createdAt: '2023-03-22T00:00:00Z',
						updatedAt: '2023-05-15T00:00:00Z',
						testSuiteId: '201',
						dependencies: ['2002', '2003'],
						sharedData: {
							accountNumber: '1234567890',
							balance: '$5,000.00',
							lastTransaction: '2023-05-14',
						},
						steps: [
							{
								id: '20001',
								order: 1,
								action: 'navigate',
								selector: 'https://banking-app.example.com/login',
								testCaseId: '2001',
							},
							{
								id: '20002',
								order: 2,
								action: 'fill',
								selector: '#username',
								value: 'testuser',
								testCaseId: '2001',
							},
							{
								id: '20003',
								order: 3,
								action: 'fill',
								selector: '#password',
								value: 'SecurePass123',
								testCaseId: '2001',
							},
							{
								id: '20004',
								order: 4,
								action: 'click',
								selector: 'button[type="submit"]',
								testCaseId: '2001',
							},
							{
								id: '20005',
								order: 5,
								action: 'click',
								selector: '.accounts-link',
								testCaseId: '2001',
							},
							{
								id: '20006',
								order: 6,
								action: 'assert',
								selector: '.account-balance',
								expectedOutcome: '$',
								testCaseId: '2001',
							},
						],
					},
					{
						id: '2002',
						name: 'User Login',
						description: 'Test user login to banking app',
						requirement: 'Users must be able to log in with valid credentials',
						target: 'User should be logged in and redirected to dashboard',
						type: TestCaseType.POSITIVE,
						status: TestStatus.PASSED,
						createdAt: '2023-03-20T00:00:00Z',
						updatedAt: '2023-05-14T00:00:00Z',
						testSuiteId: '201',
						sharedData: {
							username: 'testuser',
							sessionToken: 'abc123xyz789',
							loginTimestamp: '2023-05-14T10:30:00Z',
						},
						steps: [
							{
								id: '20101',
								order: 1,
								action: 'navigate',
								selector: 'https://banking-app.example.com/login',
								testCaseId: '2002',
							},
							{
								id: '20102',
								order: 2,
								action: 'fill',
								selector: '#username',
								value: 'testuser',
								testCaseId: '2002',
							},
							{
								id: '20103',
								order: 3,
								action: 'fill',
								selector: '#password',
								value: 'SecurePass123',
								testCaseId: '2002',
							},
							{
								id: '20104',
								order: 4,
								action: 'click',
								selector: 'button[type="submit"]',
								testCaseId: '2002',
							},
							{
								id: '20105',
								order: 5,
								action: 'assert',
								selector: '.dashboard-welcome',
								expectedOutcome: 'Welcome',
								testCaseId: '2002',
							},
						],
					},
					{
						id: '2003',
						name: 'Account Creation',
						description: 'Test creating a new bank account',
						requirement: 'Users must be able to create a new bank account',
						target:
							'New account should be created and visible in accounts list',
						type: TestCaseType.POSITIVE,
						status: TestStatus.PASSED,
						createdAt: '2023-03-18T00:00:00Z',
						updatedAt: '2023-05-13T00:00:00Z',
						testSuiteId: '201',
						dependencies: ['2002'],
						sharedData: {
							accountNumber: '1234567890',
							accountType: 'Savings',
							initialDeposit: '$1,000.00',
						},
						steps: [
							{
								id: '20201',
								order: 1,
								action: 'navigate',
								selector: 'https://banking-app.example.com/dashboard',
								testCaseId: '2003',
							},
							{
								id: '20202',
								order: 2,
								action: 'click',
								selector: '.create-account-btn',
								testCaseId: '2003',
							},
							{
								id: '20203',
								order: 3,
								action: 'fill',
								selector: '#account-type',
								value: 'Savings',
								testCaseId: '2003',
							},
							{
								id: '20204',
								order: 4,
								action: 'fill',
								selector: '#initial-deposit',
								value: '1000',
								testCaseId: '2003',
							},
							{
								id: '20205',
								order: 5,
								action: 'click',
								selector: '.submit-btn',
								testCaseId: '2003',
							},
							{
								id: '20206',
								order: 6,
								action: 'assert',
								selector: '.account-created-message',
								expectedOutcome: 'Account created successfully',
								testCaseId: '2003',
							},
						],
					},
				],
			},
		],
	},
]
